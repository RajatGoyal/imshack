<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="92" height="94" initialize="onInit( event )">
	<mx:Script>
		<![CDATA[
			
			//image renderer for desktop ;
			
			import com.yourpalmark.chat.data.ChatUser;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.graphics.ImageSnapshot;
			
			import org.igniterealtime.xiff.events.VCardEvent;
			public var photoLoader:Loader;
			private var photo_width:Number;
			private var photo_height:Number;
			public var photoarray:Array;
			public var jidarray:Array;
			private var i:int ;
			public var notificationimage:Bitmap;
			
			
			override public function set data( value:Object ):void
			{
				super.data = value;
				invalidateProperties();
				invalidateDisplayList();
			}
			
			override protected function commitProperties():void
			{
				if( data )
				{
					var user:ChatUser = data as ChatUser;
					
					if( !user.photo || ( !user.photo.binaryValue && !user.photo.externalValue ) )
					{
						user.vCard.removeEventListener( VCardEvent.LOADED, onVCardLoaded );
						user.vCard.addEventListener( VCardEvent.LOADED, onVCardLoaded );
						photoLoader.unload();
					}
					else if( user.photo.binaryValue )
					{
						photoLoader.loadBytes( user.photo.bytes );
						
					}
					else if( user.photo.externalValue )
					{
						photoLoader.load( new URLRequest( user.photo.externalValue ) );
					}
				}
			}
			
			override protected function updateDisplayList( unscaledWidth:Number, unscaledHeight:Number ):void
			{
				photo_width=unscaledWidth;
				photo_height=unscaledHeight;
				
			}
			
			
			private function onInit( event:FlexEvent ):void
			{
				
				photoLoader = new Loader();
				photoLoader.contentLoaderInfo.addEventListener( Event.COMPLETE, onPhotoComplete );
				
			}
			
			public function onPhotoComplete( event:Event ):void
			{
				
				var bitmapData:BitmapData;
				
				var content:* = photoLoader.content;
				bitmapData = new BitmapData(content.width,content.height,true,0x00000000);
				
				var matrix:Matrix = new Matrix();
				bitmapData.draw(content, matrix,null,null,null,true);
				notificationimage = new Bitmap( bitmapData );
				FlexGlobals.topLevelApplication.notify();
				
				
				
			}
			
			private function onVCardLoaded( event:VCardEvent ):void
			{
				invalidateProperties();
				invalidateDisplayList();
			}
			
		]]>
	</mx:Script>
	
</mx:Canvas>
